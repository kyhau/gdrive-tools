[tox]
envlist = py27, py34, py34_64

[testenv]
install_command = pip install {opts} {packages} -cconstraints.txt
deps =
    pip-conflict-checker==0.3
    -rrequirements-test.txt

passenv = NUMBER_OF_PROCESSORS  # needed for some multiprocessing features on windows (numpy, scipy etc)

[testenv:py27]
pip_pre=True
commands =
    pipconflictchecker
    python -m pytest --cov . --cov-config=tox.ini --cov-report xml --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel

deps =
    {[testenv]deps}
# Avoid coverage twice
[testenv:py34]
pip_pre=True
commands =
    pipconflictchecker
    python -m pytest --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel

# Avoid coverage twice
[testenv:py34_64]
# Windows only has 64 bit and 32 bit separately.
platform=win32
basepython=c:\Python34_64\python.exe
pip_pre=True
commands =
    pipconflictchecker
    python -m pytest --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel

# References
# https://borntyping.svbtle.com/using-tox-effectively
# http://stackoverflow.com/questions/13729162/how-to-i-configure-tox-so-it-will-run-pytest-coverage-on-a-single-environment-in#13754341
deps =
    {[testenv]deps}

# Inline pytest cfg start here
[pytest]
# exclude directories
norecursedirs=env .tox
# fail on XPASS
xfail_strict = true

# Inline coverage config
# Toxic fun fact: Make sure the PATH will not be filtered out by these blob expressions
# Aiming at Jenkins builds names. Yes.. it happened, a Build was named xx-tests and then the *tests/* blob filtered the whole path
# so coverage failed! yay!
[run]
omit=
    setup.py
    *__init__.py
    */tests/*
    .tox*
# Coverage report only for python 2.7
[xml]
output=coverage_py27.xml
